// <auto-generated />
using System;
using LupExercise.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LupExercise.Migrations
{
    [DbContext(typeof(LupExerciseContext))]
    [Migration("20210624170321_added-initial-data")]
    partial class addedinitialdata
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("LupExercise.Entities.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("EventDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EventTimezone")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("EventId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            EventId = 1,
                            CreatedDate = new DateTime(2021, 6, 24, 17, 3, 21, 229, DateTimeKind.Utc).AddTicks(800),
                            EndDate = new DateTime(2021, 6, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventDescription = "Christmas Party stuff",
                            EventName = "Christmas Party",
                            EventTimezone = "GMT+10",
                            ModifiedDate = new DateTime(2021, 6, 24, 17, 3, 21, 229, DateTimeKind.Utc).AddTicks(1052),
                            StartDate = new DateTime(2021, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EventId = 2,
                            CreatedDate = new DateTime(2021, 6, 24, 17, 3, 21, 229, DateTimeKind.Utc).AddTicks(1279),
                            EndDate = new DateTime(2021, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventDescription = "Event 2",
                            EventName = "Event 2",
                            EventTimezone = "GMT+8",
                            ModifiedDate = new DateTime(2021, 6, 24, 17, 3, 21, 229, DateTimeKind.Utc).AddTicks(1280),
                            StartDate = new DateTime(2021, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EventId = 3,
                            CreatedDate = new DateTime(2021, 6, 24, 17, 3, 21, 229, DateTimeKind.Utc).AddTicks(1282),
                            EndDate = new DateTime(2021, 11, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventDescription = "Event 3",
                            EventName = "Event 3",
                            EventTimezone = "GMT+8",
                            ModifiedDate = new DateTime(2021, 6, 24, 17, 3, 21, 229, DateTimeKind.Utc).AddTicks(1283),
                            StartDate = new DateTime(2021, 7, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
